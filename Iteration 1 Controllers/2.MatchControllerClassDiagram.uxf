<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>168</y>
      <w>616</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>MatchController
--
-views: ViewFacade
-table: Table
-rules: Rules
-inQ: InBoundQueue
--
+MatchController(InBoundQueue inQ, Table table, Rules rules, RemoteTableGateway remote, GameFactory factory)
+start(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>544</x>
      <y>568</y>
      <w>280</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Rules
--
+eval(Event nextE, Table table, Player player): Move

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>872</x>
      <y>472</y>
      <w>256</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Table
--
+addPile(Pile pile): void
+addPlayer(Player p): void
+getPile(String string): Pile
+removeFromPile(String string, Card c): void
+addToPile(String string, Card c): void
+addToScore(Player p, int i): int
+isMatchOver(): boolean
+setMatchOver(boolean over): void
+getRandom(): Random
+getHost(): Party
+partiesReady(): boolean
+getCurrentPlayer(): Player
+setQuorum(Quorum quorum): void
+getQuorum(): Quorum
+getPlayers(): Collection&lt;Player&gt;
+getPlayerMap(): Map&lt;Integer, Player&gt;
+createPlayer(Integer pos, String socketId): void
+lookupPlayer(String socketId): Player
+getPlayer(Integer pos): Player
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>152</x>
      <y>528</y>
      <w>256</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>InBoundQueue
--
-serialVersionUID = 1L: long
-pushBack = new Stack&lt;Event&gt;(): Stack&lt;Event&gt;
--
+InBoundQueue(): ctor
+add(Event e): boolean
+take(): Event
+pushBack(Event e): void
+pushBack(Stack&lt;Event&gt; items): void
+isEmpty(): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1208</x>
      <y>488</y>
      <w>448</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>RemoteTableGateway
--
~remote = null: RemoteEndpoint
~epIndex = new HashMap&lt;String, RemoteEndpoint&gt;(): Map&lt;String, RemoteEndpoint&gt;
-instance = null: RemoteTableGateway
--
-RemoteTableGateway(): ctor
+send(Marshalls e, String socketId): void
+sendString(String msg, String socketId): void
+registerSocket(String socketId, RemoteEndpoint remote): void
+getEndpoint(String socketId): RemoteEndpoint
+setSocket(RemoteEndpoint remote): void
+isReady(): boolean
+getInstance(): RemoteTableGateway
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>1296</y>
      <w>320</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>P52Rules
--
+RANDOM_PILE = "randomPile": String
+DISCARD_PILE = "discardPile": String
--
+P52Rules(): ctor
+eval(Event nextE, Table table, Player player): Move
+apply(CardEvent e, Table table, Player player): Move
+apply(DealEvent e, Table table, Player player): Move
+apply(InitGameEvent e, Table table, Player player): Move
+apply(NewPartyEvent e, Table table, Player player): Move
+apply(SetQuorumEvent e, Table table, Player player): Move
+apply(ConnectEvent e, Table table, Player player): Move
-registerEvents(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>272</x>
      <y>224</y>
      <w>240</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
use</panel_attributes>
    <additional_attributes>10.0;380.0;280.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>688</x>
      <y>272</y>
      <w>40</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
use</panel_attributes>
    <additional_attributes>10.0;370.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1016</x>
      <y>272</y>
      <w>40</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
use</panel_attributes>
    <additional_attributes>10.0;250.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>232</y>
      <w>336</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
use</panel_attributes>
    <additional_attributes>400.0;320.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>760</y>
      <w>328</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
RulesDispatch
--
+apply(CardEvent e, Table table, Player player): Move
+apply(DealEvent e, Table table, Player player): Move
+apply(EndPlay e, Table table, Player player): Move
+apply(InitGameEvent e, Table table, Player player): Move
+apply(SelectGame e, Table table, Player player): Move
+apply(GameRestartEvent e, Table table, Player player): Move
+apply(NewPartyEvent e, Table table, Player player): Move
+apply(ConnectEvent e, Table table, Player player): Move
+apply(SetQuorumEvent e, Table table, Player player): Move

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>288</x>
      <y>984</y>
      <w>328</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>RulesDispatchBase
--
--
+apply(CardEvent e, Table table, Player player): Move
+apply(DealEvent e, Table table, Player player): Move
+apply(EndPlay e, Table table, Player player): Move
+apply(InitGameEvent e, Table table, Player player): Move
+apply(SelectGame e, Table table, Player player): Move
+apply(GameRestartEvent e, Table table, Player player): Move
+apply(NewPartyEvent e, Table table, Player player): Move
+apply(ConnectEvent e, Table table, Player player): Move
+apply(SetQuorumEvent e, Table table, Player player): Move
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>648</x>
      <y>904</y>
      <w>80</w>
      <h>408</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
implements</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;490.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>544</x>
      <y>1144</y>
      <w>64</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
extends</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>464</x>
      <y>904</y>
      <w>80</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
implements
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>616</y>
      <w>80</w>
      <h>696</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
implements</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;850.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>920</y>
      <w>344</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>TableBase
--
-piles = new HashMap&lt;String, Pile&gt;(): Map&lt;String, Pile&gt;
-players = new HashMap&lt;Integer, Player&gt;(): Map&lt;Integer, Player&gt;
-rng = new Random(): Random
-matchOver = false: boolean
-quorum = null: Quorum
-currentPlayer = -1: Integer
-playerFactory: PlayerFactory
-playerIndex = new HashMap&lt;String, Player&gt;(): Map&lt;String, Player&gt;
--
+TableBase(PlayerFactory pFactory): ctor
+addPile(Pile pile): void
+addPlayer(Player p): void
+apply(Move move): void
+getPile(String name): Pile
+removeFromPile(String name, Card c): void
+addToPile(String name, Card c): void
+addToScore(Player p, int i): int
+getRandom(): Random
+isMatchOver(): boolean
+setMatchOver(boolean over): void
+getPlayerMap(): Map&lt;Integer, Player&gt;
+getPlayers(): Collection&lt;Player&gt;
+getHost(): Party
+partiesReady(): boolean
+getCurrentPlayer(): Player
+setQuorum(Quorum quorum): void
+getQuorum(): Quorum
+createPlayer(Integer position, String socketId): void
+lookupPlayer(String socketId): Player
+getPlayer(Integer pos): Player

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1040</x>
      <y>752</y>
      <w>80</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
implements</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1576</x>
      <y>144</y>
      <w>472</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
GameFactory
--
+createRules(): Rules
+createTable(): Table
+createPlayerFactory(): PlayerFactory
+createPlayer(Integer position, String socketId): Player
+createView(PartyRole role, Integer num, String socketId, RemoteTableGateway gw): View
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>192</y>
      <w>488</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
use</panel_attributes>
    <additional_attributes>590.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1840</x>
      <y>0</y>
      <w>472</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ViewFactory
--
+createView(PartyRole role, Integer num, String socketId, RemoteTableGateway gw): View
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1928</x>
      <y>56</y>
      <w>64</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
extends</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1624</x>
      <y>64</y>
      <w>64</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
extends</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1464</x>
      <y>0</y>
      <w>288</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
PlayerFactory
--

~createPlayer(Integer position, String socketId): Player
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1744</x>
      <y>488</y>
      <w>464</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>ViewFacade
--
-factory: ViewFactory
-views = new ArrayList&lt;View&gt;(): List&lt;View&gt;
-remoteIdLookup = new HashMap&lt;String, String&gt;(): Map&lt;String, String&gt;
--
+ViewFacade(ViewFactory factory): ctor
+createView(PartyRole role, Integer pos, String socketId, RemoteTableGateway gw): View
+getDefaultView(): View
+send(Marshalls cmd): void
+add(View view): void
+register(PresentationObject item): void
+getRemoteId(String selector): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>216</y>
      <w>904</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
creates</panel_attributes>
    <additional_attributes>1110.0;340.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
